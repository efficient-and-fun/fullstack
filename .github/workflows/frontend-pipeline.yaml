name: plananaz-frontend-pipeline

on:
  push:
    branches: [main, develop, dev-frontend]
  pull_request:
    branches: [main, develop, dev-frontend]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm install
        working-directory: frontend

      - name: Build the project
        run: npm run build
        working-directory: frontend

      - name: Run Vitest unit tests
        run: npm run test
        working-directory: frontend

      - name: Install missing dependencies for Cypress
        run: |
          sudo dpkg --add-architecture amd64
          sudo apt-get update
          sudo apt-get install -y \
            libnss3-dev \
            libatk1.0-dev \
            libatk-bridge2.0-dev \
            xvfb \
            libx11-xcb1 \
            libgbm-dev \
            libcups2 \
            libgtk-3-0 \
            libasound2t64

      - name: Clear Cypress cache
        run: npx cypress cache clear

      - name: Run Cypress end-to-end tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          build: npm run build
          start: npm run dev
          wait-on: "http://localhost:5173"
          browser: electron

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHRC_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/my-image:latest -f frontend/Dockerfile frontend

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/my-image:latest
