name: Frontend build, test, and Docker Build and Push

on:
  push:
    paths:
      - frontend/**
    branches: [dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js with caching
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Restore Cypress cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-cache-${{ runner.os }}-

      - name: Install dependencies
        run: npm ci
        working-directory: frontend

      - name: Build the project
        run: npm run build
        working-directory: frontend

      - name: Run Vitest unit tests
        run: npm run test
        working-directory: frontend

      - name: Run Cypress end-to-end tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          build: npm run build
          start: npm run dev
          wait-on: "http://localhost:5173"
          browser: electron

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test # Der Docker-Job benÃ¶tigt den erfolgreichen Abschluss des Build-and-Test-Jobs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHRC_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Set image tag
        run: echo "IMAGE_TAG=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/plananaz-frontend-image:${{ env.IMAGE_TAG }} -f frontend/Dockerfile frontend

      - name: Tag image with latest
        run: docker tag ghcr.io/${{ github.repository_owner }}/plananaz-frontend-image:${{ env.IMAGE_TAG }} ghcr.io/${{ github.repository_owner }}/plananaz-frontend-image:latest

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/plananaz-frontend-image --all-tags
