name : Backend Docker test, build and push 

on:
  push:
    paths:
      - backend/**
    branches: [dev]

jobs:
  build:
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v4
       - name: Setup .NET
         uses: actions/setup-dotnet@v4
         with:
           dotnet-version: 8.0.x
       - name: Restore dependencies
         run: dotnet restore backend/WebApi/WebApi.csproj
       - name: Build
         run: dotnet build backend/WebApi/WebApi.csproj --no-restore

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Cache .NET packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore backend/WebApiTest/WebApiTest.csproj

      - name: Test
        run: dotnet test backend/WebApiTest/WebApiTest.csproj --verbosity normal


  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHRC_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/plananaz-backend-image:${{ github.sha }} -f backend/WebApi/Dockerfile .

      - name: Build Docker image
        run: docker tag ghcr.io/${{ github.repository_owner }}/plananaz-backend-image:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/plananaz-backend-image:latest

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/plananaz-backend-image --all-tags

  deploy:
    runs-on: ubuntu-22.04
    needs: docker-build-and-push

    steps:
      - name: Trigger GitOps repo workflow
        run: |
          curl -L -v \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GHAC_TOKEN_OPS }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/efficient-and-fun/operation/actions/workflows/trigger_tag_change_backend.yaml/dispatches \
            -d '{"ref":"dev","inputs":{"latestSHA":"${{github.sha}}"}}' \
